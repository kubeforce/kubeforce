---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: kubeforcemachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KubeforceMachinePool
    listKind: KubeforceMachinePoolList
    plural: kubeforcemachinepools
    shortNames:
    - kfmp
    singular: kubeforcemachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster
      jsonPath: .metadata.labels['cluster\.x-k8s\.io/cluster-name']
      name: Cluster
      type: string
    - description: MachinePool replicas count
      jsonPath: .status.replicas
      name: Replicas
      type: string
    - description: KubeforceMachinePool ready state
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Time duration since creation of KubeforceMachinePool
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KubeforceMachinePool is the Schema for the kubeforcemachinepools
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubeforceMachinePoolSpec defines the desired state of KubeforceMachinePool.
            properties:
              providerID:
                description: ProviderID is the identification ID of the Machine Pool
                type: string
              providerIDList:
                description: ProviderIDList is the list of identification IDs of machine
                  instances managed by this Machine Pool
                items:
                  type: string
                type: array
              template:
                description: Template contains the details used to build a replica
                  machine within the Machine Pool
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      agentRef:
                        description: AgentRef is a reference to the agent resource
                          that holds the details for provisioning infrastructure for
                          a cluster.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      agentSelector:
                        description: Label selector for agents. If agentRef is empty
                          controller will find free agent by this selector and update
                          agentRef field.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      providerID:
                        description: ProviderID will be the container name in ProviderID
                          format (kf://<cluster>-<machine>)
                        type: string
                      templateReferences:
                        additionalProperties:
                          description: TemplateReference is the reference to the PlaybookTemplate
                            or PlaybookDeploymentTemplate. Playbook or PlaybookDeployment
                            is created from these templates during the KubeforceMachine
                            lifecycle.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                              - PlaybookTemplate
                              - PlaybookDeploymentTemplate
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            priority:
                              description: The priority value. The higher the value,
                                the higher the priority.
                              format: int32
                              type: integer
                            type:
                              description: Type indicates in which phase of the KubeforceMachine
                                life cycle this template will be executed.
                              enum:
                              - install
                              - delete
                              type: string
                          type: object
                        description: TemplateReferences are references to PlaybookTemplate
                          or PlaybookDeploymentTemplate that the KubeforceMachine
                          should manage. KubeforceMachine has predifined roles "init",
                          "loadblanacer", "cleanup". If these predefined TemplateReferences
                          have not been specified by users, they will be created automatically.
                        type: object
                    type: object
                required:
                - spec
                type: object
            type: object
          status:
            description: KubeforceMachinePoolStatus defines the observed state of
              KubeforceMachinePool.
            properties:
              conditions:
                description: Conditions defines current service state of the KubeforceMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the deployment controller.
                format: int64
                type: integer
              ready:
                description: Ready denotes that the machine pool is ready
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
